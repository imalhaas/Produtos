import { popperGenerator, detectOverflow } from "@popperjs/core/lib/createPopper/lib/createPopper"@popperjs/core/lib/typest * from "@popperjs/core/lib/types";
declare@popperjs/core/lib/modifiers/popperOffsets(import("@popperjs/core/lib/modifie@popperjs/core/lib/modifiers/eventListenersffsetsModifier | import("@popperjs/c@popperjs/core/lib/modifiers/computeStylessteners").EventListenersModifier | @popperjs/core/lib/modifiers/applyStyleslib/modifiers/computeStyles").ComputeStylesModifier | import("@popperjs/core/lib/modifiers@popperjs/core/lib/typestyles").ApplyStylesModifier)[];
declare const createP@popperjs/core/lib/types<TModifier extends Partial<import("@popperjs/core/lib/types").Modi@popperjs/core/lib/typesy, any>>>(reference: Element | import("@po@popperjs/core/lib/typescore/lib/types").VirtualElement, popper: HTMLElement, options?: Partial<import("@popperjs/core/lib/types").OptionsGeneric<TModifier>>) => import("@popperjs/core/lib/types").Instance;
export { createPopper, popperGenerator, defaultModifiers, detectOverflow };
